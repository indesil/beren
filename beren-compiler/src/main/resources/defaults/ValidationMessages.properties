javax.validation.constraints.AssertFalse.message     = %{paramName} must be false
javax.validation.constraints.AssertTrue.message      = %{paramName} must be true
javax.validation.constraints.Min.message             = %{paramName} must be greater than or equal to %{value}
javax.validation.constraints.Max.message             = %{paramName} must be less than or equal to %{value}
javax.validation.constraints.Negative.message        = %{paramName} must be less than 0
javax.validation.constraints.NegativeOrZero.message  = %{paramName} must be less than or equal to 0
javax.validation.constraints.NotBlank.message        = %{paramName} must not be blank
javax.validation.constraints.NotEmpty.message        = %{paramName} must not be empty
javax.validation.constraints.NotNull.message         = %{paramName} must not be null
javax.validation.constraints.Null.message            = %{paramName} must be null
javax.validation.constraints.Positive.message        = %{paramName} must be greater than 0
javax.validation.constraints.PositiveOrZero.message  = %{paramName} must be greater than or equal to 0
javax.validation.constraints.Size.message            = %{paramName} size must be between %{min} and %{max}
javax.validation.constraints.DecimalMin.message      = %{paramName} must be greater than %{value} (inclusive - %{inclusive})
javax.validation.constraints.DecimalMax.message      = %{paramName} must be less than %{value} (inclusive - %{inclusive})
javax.validation.constraints.Digits.message          = %{paramName} numeric value out of bounds (<%{integer} digits>.<%{fraction} digits> expected)
javax.validation.constraints.Future.message          = %{paramName} must be a future date
javax.validation.constraints.FutureOrPresent.message = %{paramName} must be a date in the present or in the future
javax.validation.constraints.Past.message            = %{paramName} must be a past date
javax.validation.constraints.PastOrPresent.message   = %{paramName} must be a date in the past or in the present
javax.validation.constraints.Email.message           = %{paramName} must be a well-formed email address
javax.validation.constraints.Pattern.message         = %{paramName} must match "%{pattern}"


io.github.beren.validator.constraints.StartsWith.message   = %{paramName} must starts with %{prefix}
io.github.beren.validator.constraints.EndsWith.message     = %{paramName} must starts with %{suffix}
io.github.beren.validator.constraints.Contains.message     = %{paramName} must contains %{substr}
io.github.beren.validator.constraints.Between.message      = %{paramName} must be between %{min} and %{max}
io.github.beren.validator.constraints.OneOf.message        = %{paramName} must be one of %{array}
io.github.beren.validator.constraints.NeitherOf.message    = %{paramName} must be neither of %{array}